状态模式和策略模式（strategy）相似。先看crazy在看blog


	状态模式在工作流或游戏等各种系统中有大量使用，甚至是这些系统的核心功能设计，
例如ERP系统中，一个批文的状态有多种：未办；正在办理；正在批示；正在审核；
已经完成等各种状态，使用状态机可以封装这个状态的变化规则，从而达到扩充状态时，不必涉及到状态的使用者。

总结
	使用状态模式前，客户端外界需要介入改变状态，而状态改变的实现是琐碎或复杂的。
	使用状态模式后，客户端外界可以直接使用事件Event实现，根本不必关心该事件导致如何状态变化，这些是由状态机等内部实现。
	这是一种Event-condition-State，状态模式封装了condition-State部分。
	每个状态形成一个子类，每个状态只关心它的下一个可能状态，从而无形中形成了状态转换的规则。如果新的状态加入，只涉及它的前一个状态修改和定义。

状态模式的主要优点在于封装了转换规则，并枚举可能的状态，它将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，
只需要改变对象状态即可改变对象的行为，还可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数；其缺点在于使用状态模式会增加系统类和对象的个数，
且状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱，对于可以切换状态的状态模式不满足“开闭原则”的要求。





知乎：
http://www.zhihu.com/question/23693088

策略模式一般用于单个算法，而状态模式的每个状态子类中需要包含所有原来的语境类（Context）中的所有方法的具体实现。

--------------------------------------------------------------------------------

通俗点讲，也就不上代码和UML图了。

区别：
状态模式将各个状态所对应的操作分离开来，即对于不同的状态，由不同的子类实现具体操作，不同状态的切换由子类实现，当发现传入参数不是自己这个状态所对应的参数，则自己给Context类切换状态；而策略模式是直接依赖注入到Context类的参数进行选择策略，不存在切换状态的操作。

联系：
状态模式和策略模式都是为具有多种可能情形设计的模式，把不同的处理情形抽象为一个相同的接口，符合对扩展开放，对修改封闭的原则。

还有就是，策略模式更具有一般性一些，在实践中，可以用策略模式来封装几乎任何类型的规则，只要在分析过程中听到需要在不同实践应用不同的业务规则，就可以考虑使用策略模式处理，在这点上策略模式是包含状态模式的功能的，策略模式是一个重要的设计模式。

作者：海公公
链接：http://www.zhihu.com/question/23693088/answer/25364323
来源：知乎
著作权归作者所有，转载请联系作者获得授权。


“策略模式”就好比单身，没有固定的情人。
“状态模式”好比结婚后，可以在老婆和小三之间随意切换。(知乎此答案禁止转载)