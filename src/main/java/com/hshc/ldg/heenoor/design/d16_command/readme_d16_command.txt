命令模式





		//maojd, 先看crazy的简单demo。 再看blog的简单实现
//命令模式，  定义 接收者（receiver），具有执行不同行为的能力
//定义不同的命令（command），调用receiver的不同方法。
//	定义请求者（invoker），持有不同的命令对象。     invoker根据客户端的不同请求，command调用receiver的不同方法




 总结//原地址	http://blog.csdn.net/zhengzhb/article/details/7550895

       对于一个场合到底用不用模式，这对所有的开发人员来说都是一个很纠结的问题。
有时候，因为预见到需求上会发生的某些变化，为了系统的灵活性和可扩展性而使用了某种设计模式，
但这个预见的需求偏偏没有，相反，没预见到的需求倒是来了不少，导致在修改代码的时候，
使用的设计模式反而起了相反的作用，以至于整个项目组怨声载道。
这样的例子，我相信每个程序设计者都遇到过。所以，基于敏捷开发的原则，我们在设计程序的时候，
如果按照目前的需求，不使用某种模式也能很好地解决，那么我们就不要引入它，
因为要引入一种设计模式并不困难，我们大可以在真正需要用到的时候再对系统进行一下，引入这个设计模式。

       拿命令模式来说吧，我们开发中，请求-响应模式的功能非常常见，一般来说，
我们会把对请求的响应操作封装到一个方法中，这个封装的方法可以称之为命令，但不是命令模式。
到底要不要把这种设计上升到模式的高度就要另行考虑了，
因为，如果使用命令模式，就要引入调用者、接收者两个角色，原本放在一处的逻辑分散到了三个类中，
设计时，必须考虑这样的代价是否值得。